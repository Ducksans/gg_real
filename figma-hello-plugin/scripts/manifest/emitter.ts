import fs from 'node:fs';
import path from 'node:path';

import type { ArchetypeManifest } from './builder';

const OUTPUT_PATH = path.resolve(__dirname, '../../src/lib/archetype-manifest.ts');

export const emitManifest = (manifest: ArchetypeManifest) => {
  const header = `/* eslint-disable */\n// This file is auto-generated by scripts/manifest\n// Do not edit manually.\n`;

  const content = `${header}
export interface BoxSpacing {
  top?: number;
  right?: number;
  bottom?: number;
  left?: number;
}

export interface ArchetypeSection {
  id: string;
  sectionId: string;
  order: number | null;
  label: string;
  description: string;
  slot: string;
  slotLabel: string;
  raw: string;
}

export interface ArchetypeSlotSummary {
  label: string;
  sections: ArchetypeSection[];
}

export interface ArchetypeRoute {
  label: string;
  slots: Record<string, ArchetypeSlotSummary>;
}

export interface ArchetypePage {
  label: string;
  sections: ArchetypeSection[];
}

export interface ArchetypeSurfaceSlot {
  id: string;
  label: string;
  parent: string | null;
  layout?: 'VERTICAL' | 'HORIZONTAL';
  spacing?: number;
  padding: BoxSpacing;
  width?: number | 'hug' | 'fill';
  height?: number | 'hug';
  grow?: number;
  allowedSections: string[];
}

export interface ArchetypeSurfaceLayout {
  width: number;
  height?: number | null;
  padding: BoxSpacing;
  spacing?: number;
  background?: string | null;
}

export interface ArchetypeSurface {
  id: string;
  label: string;
  layout: ArchetypeSurfaceLayout;
  slots: Record<string, ArchetypeSurfaceSlot>;
  routes?: Record<string, {
    label: string;
    slots: Record<string, ArchetypeSlotSummary>;
  }>;
  requiredSlots: string[];
}

export interface ArchetypeManifest {
  generatedAt: string;
  surfaces: Record<string, ArchetypeSurface>;
  routes: Record<string, ArchetypeRoute>;
  pages: Record<string, ArchetypePage>;
}

export const archetypeManifest: ArchetypeManifest = ${JSON.stringify(manifest, null, 2)};
`;

  fs.writeFileSync(OUTPUT_PATH, content, 'utf8');
  return OUTPUT_PATH;
};
