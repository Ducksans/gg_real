name: Docs Validate

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  docs-validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.12.0
          run_install: false

      - name: Setup Node 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run precommit:meta (docs + refs)
        run: pnpm -s precommit:meta

      - name: Run docs validator (full suite)
        run: pnpm run validate:docs

      - name: Run cross-ref validator (R9)
        run: pnpm run validate:refs

      - name: Run migration governance validator (R10)
        run: pnpm exec bash scripts/validate_migrations.sh

      - name: Run code header validator (P1)
        run: pnpm exec bash scripts/validate_code_headers.sh

      - name: Run sidecar meta validator (P3)
        run: pnpm exec bash scripts/validate_sidecar_meta.sh

      - name: Validate hub manifests against schema
        if: ${{ always() }}
        run: |
          set -e
          shopt -s nullglob
          for f in admin/manifests/*.yaml; do
            # Skip sidecar files like *.meta.yaml â€” they are validated separately
            case "$f" in *.meta.yaml) continue ;; esac
            echo "Validating $f"
            tmp="$(mktemp).json"
            pnpm exec js-yaml "$f" > "$tmp"
            pnpm exec ajv validate -s admin/schemas/hub.schema.json -d "$tmp"
            rm -f "$tmp"
          done
